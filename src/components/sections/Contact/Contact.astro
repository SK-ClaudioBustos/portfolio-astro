---
import SectionWrapper from "@components/ui/SectionWrapper.astro";
import Title from "@components/ui/Title.astro";

const { i18n } = Astro.props;
---

<SectionWrapper id="contact">
    <div class="section">
        <Title>
            {i18n.CONTACT.TITLE}
        </Title>
        <div class="contact-content">
            <div class="message-window flex-center" id="message-window">
                <h1 id="user_message"></h1>
            </div>
            <form
                id="form"
                class="contact-form"
                action="https://formspree.io/f/manqgzkn"
                method="POST"
            >
                <div class="contact-input">
                    <label for="name">{i18n.CONTACT.INPUT_NAME_LABEL}:</label>
                    <input
                        type="text"
                        id="name"
                        name="name"
                        placeholder={i18n.CONTACT.INPUT_NAME_PLACEHOLDER}
                        autocomplete="name"
                        required
                    />
                </div>

                <div class="contact-input">
                    <label for="email">Email:</label>
                    <input
                        type="email"
                        id="email"
                        name="email"
                        placeholder="example@email.com"
                        autocomplete="email"
                        required
                    />
                </div>

                <div class="contact-input">
                    <label for="message"
                        >{i18n.CONTACT.INPUT_MESSAGE_LABEL}:</label
                    >
                    <textarea
                        id="message"
                        name="message"
                        rows="5"
                        placeholder={i18n.CONTACT.INPUT_MESSAGE_PLACEHOLDER}
                        required></textarea>
                </div>

                <button id="submit-btn" type="submit"
                    >{i18n.CONTACT.BUTTON}</button
                >
            </form>
        </div>
    </div>
</SectionWrapper>

<script>
    const Form = document.getElementById("form") as HTMLFormElement;
    const handleSubmit = async (e: Event) => {
        e.preventDefault();
        const SubmitButton = document.getElementById(
            "submit-btn",
        ) as HTMLButtonElement;

        if (SubmitButton !== null && Form !== null) {
            SubmitButton.disabled = true;
            SubmitButton.textContent = "Enviando..."; // Cambiar el texto del botón

            try {
                const formData = new FormData(Form);
                const MessageWindow = document.getElementById("message-window");
                const MessageElement = document.getElementById("user_message");
                const response = await fetch(Form.action, {
                    method: Form.method,
                    body: formData,
                    headers: {
                        Accept: "application/json",
                    },
                });
                if (MessageWindow !== null && MessageElement !== null) {
                    MessageWindow.style.display = "flex";
                    if (response.ok) {
                        MessageElement.innerText = "¡Mensaje enviado con éxito!";
                        SubmitButton.disabled = false;
                        SubmitButton.textContent = "Enviar";
                        Form.reset();
                    } else {
                        MessageElement.innerText =
                            "Hubo un problema al enviar el mensaje. Por favor, inténtalo de nuevo.";
                        SubmitButton.disabled = false;
                        SubmitButton.textContent = "Enviar";
                    }
                }
            } catch (error) {
                alert(
                    "Ocurrió un error inesperado. Por favor, inténtalo más tarde.",
                );
                SubmitButton.disabled = false;
                SubmitButton.textContent = "Enviar";
            }
        }
    };
    Form?.addEventListener("submit", handleSubmit);
</script>

<style>
    .contact-content {
        position: relative;

        & .message-window {
            display: none;
            text-align: center;
            position: absolute;
            border-radius: 10px;
            background-color: var(--c1);
            color: var(--c2);
            width: min(70vw, 500px);
            height: 100%;
            border: 1rem double var(--c2);
        }

        & .contact-form {
            width: min(70vw, 500px);

            & .contact-input {
                & label {
                    display: block;
                    margin-top: 10px;
                    font-weight: bold;
                    color: var(--c2);
                }

                & input,
                textarea {
                    min-width: 100%;
                    padding: 10px;
                    margin-top: 5px;
                    border: 1px solid var(--c3);
                    border-radius: 4px;
                    font-size: 1rem;
                }

                & textarea {
                    font-family:
                        "Onest Variable",
                        system-ui,
                        -apple-system,
                        BlinkMacSystemFont,
                        "Segoe UI",
                        Roboto,
                        Oxygen,
                        Ubuntu,
                        Cantarell,
                        "Open Sans",
                        "Helvetica Neue",
                        sans-serif;
                    min-height: 115px;
                    max-height: 200px;
                }
            }

            & button {
                display: block;
                width: 100%;
                padding: 10px;
                margin-top: 20px;
                background: var(--c4);
                color: white;
                border: none;
                border-radius: 12px;
                font-size: 1rem;
                cursor: pointer;

                &:hover {
                    filter: brightness(90%);
                }
            }
        }
    }
</style>
